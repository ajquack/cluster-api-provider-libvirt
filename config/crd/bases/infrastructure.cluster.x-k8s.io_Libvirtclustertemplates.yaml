---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: Libvirtclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: LibvirtClusterTemplate
    listKind: LibvirtClusterTemplateList
    plural: Libvirtclustertemplates
    shortNames:
    - hcclt
    singular: libvirtclustertemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LibvirtClusterTemplate is the Schema for the Libvirtclustertemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LibvirtClusterTemplateSpec defines the desired state of LibvirtClusterTemplate.
            properties:
              template:
                description: LibvirtClusterTemplateResource contains spec for LibvirtClusterSpec.
                properties:
                  metadata:
                    description: |-
                      ObjectMeta is metadata that all persisted resources must have, which includes all objects
                      users must create. This is a copy of customizable fields from metav1.ObjectMeta.

                      ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template` and `MachineSet.Template`,
                      which are not top-level Kubernetes objects. Given that metav1.ObjectMeta has lots of special cases
                      and read-only fields which end up in the generated CRD validation, having it as a subset simplifies
                      the API and some issues that can impact user experience.

                      During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                      for v1alpha2, we noticed a failure would occur running Cluster API test suite against the new CRDs,
                      specifically `spec.metadata.creationTimestamp in body must be of type string: "null"`.
                      The investigation showed that `controller-tools@v2` behaves differently than its previous version
                      when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1) package.

                      In more details, we found that embedded (non-top level) types that embedded `metav1.ObjectMeta`
                      had validation properties, including for `creationTimestamp` (metav1.Time).
                      The `metav1.Time` type specifies a custom json marshaller that, when IsZero() is true, returns `null`
                      which breaks validation because the field isn't marked as nullable.

                      In future versions, controller-tools@v2 might allow overriding the type and validation for embedded
                      types. When that happens, this hack should be revisited.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: LibvirtClusterSpec defines the desired state of LibvirtCluster.
                    properties:
                      foo:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                        x-kubernetes-validations:
                        - message: port must be within 1-65535
                          rule: self.port > 0 && self.port < 65536
                      libvirtSecretRef:
                        properties:
                          key:
                            description: |-
                              Key defines the keys that are used in the secret.
                              Need to specify either HCloudToken or both HetznerRobotUser and HetznerRobotPassword.
                            properties:
                              libvirtURI:
                                description: LibvirtURI is the key in the secret that
                                  contains the libvirt URI.
                                type: string
                            required:
                            - libvirtURI
                            type: object
                          name:
                            default: hetzner
                            description: Name defines the name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                    required:
                    - libvirtSecretRef
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
